{"version":3,"sources":["services/index.js","components/DeleteModal.js","components/Tags.js","components/EditModal.js","util/index.js","components/CustomAlert.js","components/UserThreadList.js","components/SideBar.js","components/ThreadList.js","components/UserPostList.js","components/LikedList.js","PrivateRoute.js","components/TopTagsList.js","components/Dashboard.js","components/Preferences.js","components/Login.js","components/Home.js","PublicRoute.js","components/Signup.js","components/CreatePost.js","components/Thread.js","components/Search.js","components/NavBar.js","components/CreateThreadForm.js","components/SearchList.js","components/NotFound.js","components/Footer.js","App.js","components/userToken.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","headers","interceptors","request","use","config","token","JSON","parse","sessionStorage","getItem","url","includes","error","Promise","reject","response","a","originalRequest","status","window","location","href","_retry","data","options","method","qs","stringify","then","res","console","log","setItem","access_token","refresh_token","DeleteModal","show","handleClose","handleDelete","id","message","Modal","onHide","Header","closeButton","Title","Body","Alert","variant","Footer","Button","onClick","Tag","tag","index","removeTag","className","TagClickable","findTag","Tags","tags","setTags","filter","map","InputGroup","FormControl","type","onKeyUp","e","key","event","target","value","placeholder","EditThreadModal","setSubject","setContent","handleEdit","subject","content","onChange","disabled","as","EditPostModal","getDateAgo","date","seconds","Math","floor","Date","getTime","interval","CustomAlertDismissable","setShow","heading","onClose","dismissible","Heading","Thread","thread","displayEditModal","displayDeleteModal","Container","Row","Col","to","xs","order","lg","likes","createdAt","updatedAt","UserThreadList","user","useState","threads","setThreads","setId","showDeleteConfirmation","setShowDeleteConfirmation","showEditModal","setShowEditModal","showError","setShowError","setError","history","useHistory","push","useEffect","get","username","catch","length","currentThread","editedThread","put","delete","el","SideBar","useRouteMatch","useLocation","pathname","setKey","Nav","defaultActiveKey","activeKey","onSelect","selectedKey","handleSelect","Link","eventKey","findByTag","forwardRef","ref","toggleLike","author","Provider","comments","userLiked","ThreadList","currentPage","setCurrentPage","sort","setSort","loading","setLoading","hasMore","setHasMore","observer","useRef","lastThreadElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","source","CancelToken","cancelToken","prevThreads","Set","pageCount","isCancel","cancel","err","post","threadList","fluid","Item","Spinner","animation","role","Post","threadId","threadSubject","md","UserPostList","posts","setPosts","postId","setPostId","showAlert","setShowAlert","currentPost","editedPost","Like","like","unlike","threadAuthor","LikedList","setLikes","currentLike","PrivateRoute","children","rest","render","state","from","TopTagsList","currentTag","Dashboard","path","xl","exact","Preferences","loginUser","credentials","password","Error","Login","setToken","setUserName","setPassword","validated","setValidated","showErrorAlert","setShowErrorAlert","handleSubmit","currentTarget","checkValidity","preventDefault","stopPropagation","Form","noValidate","onSubmit","Group","controlId","Label","Control","required","Feedback","block","Text","muted","Home","PublicRoute","restricted","formReducer","reset","name","SignUp","useReducer","formData","setFormData","handleChange","newUser","CreatePostModal","setThread","showCreateModal","setShowCreateModal","showDeleteModal","setShowDeleteModal","isLiked","setIsLiked","useParams","newPost","Search","searchField","setSearchField","doSearch","NavBar","Navbar","bg","expand","Brand","Toggle","Collapse","clear","CreateThread","newThread","rows","SearchList","query","URLSearchParams","search","parameters","setParameters","NotFound","open","focus","App","tokenString","usernameString","refreshString","getToken","userToken","useToken","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","l","decoded","slice","split","s","replace","join","replaceState","hash","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbd6d2de.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\n// new instance of axios with custom config\r\nexport const instance = axios.create({\r\n    baseURL: 'https://forum-backend.notacannibal.xyz/api/v1',\r\n    headers: {'Content-Type': 'application/json'}\r\n});\r\n\r\n// request interceptor: set access token in header for every restricted request\r\ninstance.interceptors.request.use(\r\n    config => {\r\n        const token = JSON.parse(sessionStorage.getItem('token'));\r\n        if (token && (config.url.includes('users') || config.url.includes('threads?page'))) {\r\n            config.headers['Authorization'] = 'Bearer ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        Promise.reject(error);\r\n    }\r\n);\r\n\r\n// response interceptor\r\ninstance.interceptors.response.use((response) => {\r\n    return response;\r\n}, async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (!error.response) {\r\n        return Promise.reject(error);\r\n    }\r\n\r\n    if (originalRequest.url.includes('auth')) {\r\n        return Promise.reject(error);\r\n    }\r\n\r\n    // if the refresh token is not valid either, then user needs to login again\r\n    if (error.response.status === 400 && originalRequest.url === 'http://localhost:8080/api/v1/auth/refresh/token') {\r\n        window.location.href = '/login';\r\n        return Promise.reject(error);\r\n    }\r\n\r\n    // status code should be 401, but i haven't changed it on the backend, so it's 403 for now\r\n    if (error.response.status === 403 && !originalRequest._retry) {\r\n        originalRequest._retry = true;\r\n\r\n        const url = 'http://localhost:8080/api/v1/auth/refresh/token';\r\n        const data = {\r\n            'grant_type': 'refresh_token',\r\n            'refresh_token': JSON.parse(sessionStorage.getItem('refresh_token'))\r\n        };\r\n\r\n        const options = {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            data: qs.stringify(data),\r\n            url,\r\n        };\r\n\r\n        return axios(options).then(res => {\r\n            if (res.status === 200) {\r\n                console.log(res.data);\r\n                // 1. Store the token\r\n                sessionStorage.setItem('token', JSON.stringify(res.data.access_token));\r\n                sessionStorage.setItem('refresh_token', JSON.stringify(res.data.refresh_token));\r\n\r\n                // 2. Change authorization header\r\n                originalRequest.headers['Authorization'] = 'Bearer ' + JSON.parse(sessionStorage.getItem('token'));\r\n\r\n                // 3. return originalRequest object with Axios\r\n                return axios(originalRequest);\r\n            }\r\n        });\r\n    }\r\n    \r\n    if (originalRequest.method === 'get' && error.response.status === 404) {   \r\n        return error.response;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n","import Alert from \"react-bootstrap/Alert\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nexport default function DeleteModal({ show, handleClose, handleDelete, id, message }) {\r\n  \r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Confirm Delete</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body> <Alert variant=\"danger\"><p>{message}</p></Alert> </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={() => handleDelete(id)}>\r\n              Delete\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}","import { FormControl, InputGroup } from \"react-bootstrap\";\r\n\r\nfunction Tag({ tag, index, removeTag}) {\r\n    return (\r\n        <li className=\"tag\">\r\n            <span className=\"tag-title\">{tag}</span>\r\n            <span className=\"tag-close-icon\" onClick={() => removeTag(index)} >x</span>\r\n        </li>\r\n    );  \r\n}\r\n\r\nexport function TagClickable({ tag, findTag }) {\r\n    return (\r\n        <li className=\"tag\" onClick={() => findTag(tag)}>\r\n            <span className=\"tag-title\">{tag}</span>\r\n        </li>\r\n    );  \r\n}\r\n \r\nexport default function Tags({tags, setTags}) {\r\n\r\n    const removeTag = (id) => {\r\n        setTags([...tags.filter((tag, index) => index !== id)]);\r\n    };\r\n\r\n    const addTag = (event) => {\r\n        if (event.target.value !== \"\") {\r\n            setTags([...tags, event.target.value]);\r\n            event.target.value = \"\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tags-input\">\r\n            <ul id=\"tags\">\r\n                {tags.map((tag, index) => (\r\n                    <Tag tag={tag} index={index} removeTag={removeTag} key={index} />\r\n                ))}\r\n            </ul>\r\n            <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                    type=\"text\"\r\n                    onKeyUp={e => e.key === \"Enter\" ? addTag(e) : null}\r\n                    placeholder=\"Press enter to add tags\"\r\n                />\r\n            </InputGroup>       \r\n        </div>\r\n    );\r\n}","import Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Tags from \"./Tags\";\r\n\r\nexport function EditThreadModal({ show, handleClose, setSubject, setContent, setTags, handleEdit, id, subject, content, tags }) {\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit post</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup className=\"mb-2\">\r\n                        <FormControl\r\n                            aria-label=\"Thread Subject\"\r\n                            onChange={e => setSubject(e.target.value)}\r\n                            value={subject || ''} \r\n                            disabled />\r\n                    </InputGroup>\r\n                    <InputGroup>\r\n                        <FormControl \r\n                            as=\"textarea\" \r\n                            aria-label=\"With textarea\"\r\n                            onChange={e => setContent(e.target.value)}\r\n                            value={content || ''} />\r\n                    </InputGroup>\r\n                    <Tags tags={tags} setTags={setTags} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => handleEdit(id)}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function EditPostModal({ show, handleClose, setContent, handleEdit, id, content }) {\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit post</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup>\r\n                        <FormControl \r\n                            as=\"textarea\" \r\n                            aria-label=\"With textarea\"\r\n                            onChange={e => setContent(e.target.value)}\r\n                            value={content || ''} />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => handleEdit(id)}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","// i stole this from stack overflow\r\n// https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\r\nexport function getDateAgo(date) {\r\n    var seconds = Math.floor((new Date().getTime() - new Date(date).getTime()) / 1000);\r\n\r\n    var interval = seconds / 31536000;\r\n\r\n    if (interval >= 1) {\r\n        return Math.floor(interval) + \" years\";\r\n    }\r\n    interval = seconds / 2592000;\r\n    if (interval >= 1) {\r\n        return Math.floor(interval) + \" months\";\r\n    }\r\n    interval = seconds / 604800;\r\n    if (interval >= 1) {\r\n        return Math.floor(interval) + \" weeks\";\r\n    }\r\n    interval = seconds / 86400;\r\n    if (interval >= 1) {\r\n        return Math.floor(interval) + \" days\";\r\n    }\r\n    interval = seconds / 3600;\r\n    if (interval >= 1) {\r\n        return Math.floor(interval) + \" hours\";\r\n    }\r\n    interval = seconds / 60;\r\n    if (interval >= 1) {\r\n        return Math.floor(interval) + \" minutes\";\r\n    }\r\n    return Math.floor(seconds) + \" seconds\";\r\n}","import Alert from \"react-bootstrap/Alert\";\r\n\r\nexport default function CustomAlertDismissable({ show, setShow, variant, heading, message }) {\r\n    if (show) {\r\n        return (\r\n            <Alert variant={variant} onClose={() => setShow(false)} dismissible>\r\n                <Alert.Heading>{heading}</Alert.Heading>\r\n                <p>\r\n                    {message}\r\n                </p>\r\n            </Alert>\r\n        );\r\n    }\r\n    return null;\r\n}","import { Link, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { instance } from \"../services\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport { EditThreadModal } from \"./EditModal\";\r\nimport { getDateAgo } from \"../util\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport CustomAlertDismissable from \"./CustomAlert\";\r\nimport { TagClickable } from \"./Tags\";\r\n\r\nfunction Thread({ thread, displayEditModal, displayDeleteModal, findTag }) {\r\n    return (\r\n        <Container className=\"thread-wrapper\">\r\n            <Row>\r\n                <Col>\r\n                    <h5><Link to={\"/thread/\" + thread.id}>\r\n                        {thread.subject}\r\n                    </Link></h5>\r\n                </Col>\r\n                <Col xs={{ order: 1 }} lg={1} className=\"d-flex align-items-baseline justify-content-end\">\r\n                    <FiEdit className=\"edit-icon\" onClick={() => displayEditModal(thread.id, thread.subject, thread.content, thread.tags)} />\r\n                    <AiOutlineDelete className=\"delete-icon\" onClick={() => displayDeleteModal(thread.id)} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <p>{thread.content}</p>\r\n                    <p className=\"text-muted\">{thread.likes} likes &bull; { } {getDateAgo(thread.createdAt)} ago { } {thread.updatedAt ? ' • Edited ' + thread.updatedAt : ''}</p>\r\n                    <ul id=\"tags\">\r\n                        {!thread.tags ? null : thread.tags.map((tag, index) => (\r\n                            <TagClickable tag={tag} findTag={findTag} key={index} />\r\n                        ))}\r\n                    </ul>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default function UserThreadList({ user }) {\r\n    const [threads, setThreads] = useState([]);\r\n    const [id, setId] = useState(null);\r\n    const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [subject, setSubject] = useState(null);\r\n    const [content, setContent] = useState(null);\r\n    const [tags, setTags] = useState([]);\r\n    const [showError, setShowError] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        instance.get(`/users/${user.username}/threads`)\r\n            .then((response) => {\r\n                setThreads(response.data);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                if (!error.response) {\r\n                    setError('Server error');\r\n                } else {\r\n                    setError(error.response.data);\r\n                }\r\n                \r\n                setShowError(true);\r\n            });\r\n        \r\n    }, [user.username]);\r\n\r\n    function findTag(tag) {\r\n        history.push(`/search?tagged=${tag}`);\r\n    }\r\n\r\n    const displayDeleteModal = (id) => {\r\n        setId(id);\r\n        setShowDeleteConfirmation(true);\r\n    }\r\n\r\n    const hideDeleteModal = () => {\r\n        setShowDeleteConfirmation(false);\r\n    }\r\n\r\n    function deleteThread(id) {\r\n        instance.delete(`/users/${user.username}/threads/${id}`)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setThreads([...threads.filter(el => el.id !== id)]);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                if (!error.response) {\r\n                    setError('Could not connect to the server.')\r\n                } else {\r\n                    setError(error.response.data);\r\n                }\r\n                \r\n                setShowError(true);\r\n            });\r\n\r\n        setShowDeleteConfirmation(false);\r\n    }\r\n\r\n    const displayEditModal = (id, subject, content, tags) => {\r\n        setId(id);\r\n        setSubject(subject);\r\n        setContent(content);\r\n        setTags(!tags ? [] : tags);\r\n        setShowEditModal(true);\r\n    }\r\n\r\n    const hideEditModal = () => {\r\n        setShowEditModal(false);\r\n    }\r\n\r\n    function editThread(id) {\r\n        const editedThread = {\r\n            subject: subject,\r\n            content: content,\r\n            tags: tags\r\n        };\r\n        instance.put(`/users/${user.username}/threads/${id}`, editedThread)\r\n        .then(response => {\r\n            console.log(response);\r\n            setThreads(threads.map(thread => {\r\n                if (thread.id === id) {\r\n                    return {...thread, subject: subject, content: content, tags: tags, updatedAt: 'just now'};\r\n                } else {\r\n                    return thread;\r\n                }\r\n            }));\r\n        }).catch(error => {\r\n            console.log(error);\r\n            if (!error.response) {\r\n                setError('Could not connect to server. :(')\r\n            } else {\r\n                setError(error.response.data);\r\n            }\r\n            \r\n            setShowError(true);\r\n        });\r\n\r\n        setShowEditModal(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"threads-container\">\r\n            <CustomAlertDismissable\r\n                message={error}\r\n                heading={\"Error\"}\r\n                show={showError}\r\n                setShow={setShowError}\r\n                variant={\"danger\"} />\r\n            {threads.length === 0 ? <p>No threads submitted yet.</p> :\r\n            (threads.map((currentThread) => (\r\n                <Thread \r\n                    thread={currentThread} \r\n                    displayDeleteModal={displayDeleteModal}\r\n                    displayEditModal={displayEditModal} \r\n                    findTag={findTag}\r\n                    key={currentThread.id}/>\r\n            )))}\r\n            <EditThreadModal \r\n                show={showEditModal}\r\n                handleClose={hideEditModal}\r\n                setSubject={setSubject}\r\n                setContent={setContent}\r\n                setTags={setTags}\r\n                handleEdit={editThread}\r\n                id={id}\r\n                subject={subject}\r\n                content={content}\r\n                tags={tags} />\r\n            <DeleteModal \r\n                show={showDeleteConfirmation}\r\n                handleClose={hideDeleteModal}\r\n                handleDelete={deleteThread}\r\n                message={\"Are you sure you want to delete this thread? This action is permanent and cannot be undone.\"}\r\n                id={id} />\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router';\r\n\r\nexport default function SideBar({ user }) {\r\n    const { url } = useRouteMatch();\r\n    const history = useHistory();\r\n    let location = useLocation();\r\n    const [key, setKey] = useState(`${location.pathname}`);\r\n\r\n    console.log(location.pathname);\r\n\r\n    const handleSelect = (selectedKey) => {\r\n        setKey(selectedKey);\r\n        history.push(selectedKey);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Nav \r\n                variant=\"pills\" \r\n                defaultActiveKey={`${url}`}\r\n                activeKey={key}\r\n                onSelect={(selectedKey) => {handleSelect(selectedKey)}}\r\n                className=\"flex-sm-column\"\r\n            >\r\n                <Nav.Link eventKey={`${url}`}>Home</Nav.Link>\r\n                <Nav.Link eventKey={`${url}/threads`}>My Threads</Nav.Link>\r\n                <Nav.Link eventKey={`${url}/posts`}>My Posts</Nav.Link>\r\n                <Nav.Link eventKey={`${url}/liked`}>\r\n                    Liked Threads\r\n                </Nav.Link>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\nimport { forwardRef, useCallback, useEffect, useRef, useState } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport { instance } from \"../services\";\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { MdModeComment } from \"react-icons/md\";\nimport { IconContext } from \"react-icons\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useHistory } from \"react-router\";\nimport { getDateAgo } from \"../util\";\nimport axios from \"axios\";\n\nfunction Tag({ tag, findByTag }) {\n    return (\n        <li className=\"tag\" onClick={() => findByTag(tag)}>\n            <span className=\"tag-title\">{tag}</span>\n        </li>\n    );  \n}\n\nconst Thread = forwardRef(({ thread, toggleLike }, ref) => {\n    const history = useHistory();\n\n    const findByTag = (tag) => {\n        history.push(`/search?tagged=${tag}`);\n    }\n\n    useEffect(() => {\n        if (!ref)\n            return;\n        return () => ref(null);\n    }, [ref]);\n\n    return (\n        <div className=\"thread-wrapper\" ref={ref} >\n            <div className=\"d-flex flex-row\">\n                <div className=\"d-flex flex-column\">\n                    <p><b>{thread.author}</b></p>\n                    <h5><Link to={\"/thread/\" + thread.id}>\n                        {thread.subject}\n                    </Link></h5>\n                    <p>{thread.content}</p>\n                    \n                    <p className=\"text-muted\">\n                        <IconContext.Provider value={{ className: 'comment-icon' }}>\n                            <MdModeComment onClick={() => history.push(`/thread/${thread.id}`)} />\n                        </IconContext.Provider> {thread.comments} comments &bull; { }\n                    \n                        <IconContext.Provider value={{ className: thread.userLiked ? 'heart-icon-liked' : 'heart-icon' }}>\n                            <AiFillHeart onClick={() => toggleLike(thread.userLiked, thread.id)} />\n                        </IconContext.Provider> {thread.likes} likes &bull; { }\n                        {getDateAgo(thread.createdAt)} ago\n                    </p>\n                    <ul id=\"tags\">\n                        {!thread.tags ? null : thread.tags.map((tag, index) => (\n                            <Tag tag={tag} findByTag={findByTag} key={index} />\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n});\n\nlet PageSize = 5;\n\nexport default function ThreadList({ user }) {\n\n    const [threads, setThreads] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [sort, setSort] = useState(\"new\");\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [hasMore, setHasMore] = useState(false);\n\n    const history = useHistory();\n\n    const observer = useRef();\n    const lastThreadElementRef = useCallback(node => {\n        if (loading)\n            return;\n        if (observer.current)\n            observer.current.disconnect();\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && hasMore) {\n                //console.log(currentPage);\n                setCurrentPage(prevPageNumber => prevPageNumber + 1);\n            }\n        });\n        if (node)\n            observer.current.observe(node);\n    }, [loading, hasMore]);\n\n    useEffect(() => {\n        setLoading(true);\n        setError(false);\n        const source = axios.CancelToken.source();\n        const cancelToken = source.token;\n        instance.get(`/threads?page=${currentPage - 1}&size=${PageSize}&sort=${sort}`, {\n            cancelToken\n        })\n            .then((response) => {\n                setThreads(prevThreads => {\n                    return [...new Set([...prevThreads, ...response.data.threads])];\n                });\n                \n                setHasMore(response.data.pageCount > 0);\n                setLoading(false);\n            })\n            .catch((error) => {\n                if (axios.isCancel(error)) {\n                    console.log('Request cancelled ' + error.message);\n                    return;\n                }\n                console.log(error);\n                setError(true);\n            });\n\n            return (() => {\n                source.cancel('cancel pweease');\n            });\n    }, [currentPage, sort]);\n\n    const handleSelect = (selectedKey) => {\n        if (selectedKey !== sort) {\n            setThreads([]);\n        }\n        setCurrentPage(1);\n        setSort(selectedKey);\n        setLoading(true);\n        setError(false);\n    }\n\n    function toggleLike(userLiked, id) {\n        if (!user.token) {\n            history.push(\"/login\");\n        } else if (userLiked) {\n            instance.delete(`/users/${user.username}/liked/${id}`)\n                .then(res => {\n                    console.log(res.data);\n                    setThreads(threads.map((currentThread) => {\n                        if (currentThread.id === id) {\n                            return {...currentThread, likes: currentThread.likes - 1, userLiked: false};\n                        } else {\n                            return currentThread;\n                        }\n                    }));\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        } else {\n            instance.post(`/users/${user.username}/liked/${id}`)\n                .then(res => {\n                    console.log(res.data);\n                    setThreads(threads.map((currentThread) => {\n                        if (currentThread.id === id) {\n                            return {...currentThread, likes: currentThread.likes + 1, userLiked: true};\n                        } else {\n                            return currentThread;\n                        }\n                    }));\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n    }\n\n    const threadList = threads.map((currentThread, index) => {\n        if (index + 1 === threads.length) {\n            return <Thread thread={currentThread} key={currentThread.id} toggleLike={toggleLike} ref={lastThreadElementRef} />;\n        } else {\n            return <Thread thread={currentThread} key={currentThread.id} toggleLike={toggleLike} />;\n        }\n    });\n    \n    return (\n        <Container fluid className=\"thread-container\">\n            <Nav variant=\"pills\" className=\"justify-content-center mt-2\"\n                activeKey={`${sort}`}\n                onSelect={(selectedKey) => handleSelect(selectedKey)}>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"new\">New</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"popular\">Popular</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link eventKey=\"old\">Old</Nav.Link>\n                </Nav.Item>\n            </Nav>\n\n            {threadList}\n            <div>{loading && \n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>}\n            </div>\n            \n            <div>{error && 'Error'}</div>\n\n            {/*\n            <CustomPagination\n                currentPage={currentPage}\n                totalCount={totalCount}\n                pageSize={PageSize}\n                onPageChange={page => setCurrentPage(page)}\n            />\n            */}\n        </Container>\n    );\n}","import { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport EditPostModal from \"./EditModal\";\r\nimport { instance } from \"../services\";\r\nimport { getDateAgo } from '../util';\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport CustomAlertDismissable from \"./CustomAlert\";\r\n\r\nfunction Post({ post, displayEditModal, displayDeleteModal }) {\r\n    return (\r\n        <Container className=\"thread-wrapper\">\r\n            <Row>\r\n                <Col>\r\n                    <b><Link to={\"/thread/\" + post.threadId}>\r\n                        {post.threadSubject}\r\n                    </Link></b>\r\n                    \r\n                </Col>\r\n                <Col xs={{ order: 1 }} lg={1} className=\"d-flex align-items-baseline justify-content-end\">\r\n                    <FiEdit className=\"edit-icon\" onClick={() => displayEditModal(post.id, post.content)} />\r\n                    <AiOutlineDelete className=\"delete-icon\" onClick={() => displayDeleteModal(post.id)} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"auto\">\r\n                    <p>{post.content}</p>\r\n                    <p className=\"text-muted\">{getDateAgo(post.createdAt)} ago {post.updatedAt ? '• Edited ' + post.updatedAt : ''}</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default function UserPostList({ user }) {\r\n    const [posts, setPosts] = useState([]);\r\n    const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [content, setContent] = useState(null);\r\n    const [postId, setPostId] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    useEffect(() => {\r\n        instance.get(`/users/${user.username}/posts`)\r\n        .then((response) => {\r\n            setShowAlert(false);\r\n            setPosts(response.data);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            if (!error.response) {\r\n                setError('Server error. Could not retrieve posts.');\r\n            } else {\r\n                setError(error.response.data);\r\n            }\r\n\r\n            setShowAlert(true);\r\n        });\r\n    }, [user.username]);\r\n\r\n    const displayDeleteModal = (id) => {\r\n        setPostId(id);\r\n        setShowDeleteConfirmation(true);\r\n    }\r\n\r\n    const hideDeleteModal = () => {\r\n        setShowDeleteConfirmation(false);\r\n    }\r\n\r\n    function deletePost(id) {\r\n        instance.delete(`/users/${user.username}/posts/${id}`)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setShowAlert(false);\r\n            setPosts([...posts.filter(el => el.id !== id)]);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            if (error.response) {\r\n                setError('Server error');\r\n            } else {\r\n                setError(error.response.data);\r\n            }\r\n\r\n            setShowAlert(true);\r\n        })\r\n\r\n        setShowDeleteConfirmation(false);\r\n    }\r\n\r\n    const displayEditModal = (id, content) => {\r\n        setPostId(id);\r\n        setContent(content);\r\n        setShowEditModal(true);\r\n    }\r\n\r\n    const hideEditModal = () => {\r\n        setShowEditModal(false);\r\n    }\r\n\r\n    function editPost(id) {\r\n        const editedPost = {\r\n            content: content\r\n        };\r\n\r\n        instance.put(`/users/${user.username}/posts/${id}`, editedPost)\r\n        .then((response) => {\r\n            console.log(response);\r\n            setShowAlert(false);\r\n            setPosts(posts.map(post => {\r\n                if (post.id === id) {\r\n                    return {...post, content: content, updatedAt: 'just now'};\r\n                } else {\r\n                    return post;\r\n                }\r\n            }));\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            if (!error.response) {\r\n                setError('Could not connect to server');\r\n            } else {\r\n                setError(error.response.data);\r\n            }\r\n\r\n            setShowAlert(true);\r\n        });\r\n\r\n        setShowEditModal(false);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CustomAlertDismissable\r\n                show={showAlert}\r\n                setShow={setShowAlert}\r\n                variant={\"danger\"}\r\n                heading={\"Error\"}\r\n                message={error} />\r\n            {posts.length === 0 ? <p>No posts found.</p> : \r\n            (posts.map((currentPost) => (\r\n                <Post \r\n                    post={currentPost} \r\n                    displayEditModal={displayEditModal}\r\n                    displayDeleteModal={displayDeleteModal} \r\n                    key={currentPost.id}/>\r\n            )))}\r\n            <EditPostModal\r\n                show={showEditModal}\r\n                handleClose={hideEditModal}\r\n                setContent={setContent}\r\n                handleEdit={editPost}\r\n                id={postId}\r\n                content={content}\r\n                 />\r\n            <DeleteModal \r\n                show={showDeleteConfirmation} \r\n                handleClose={hideDeleteModal} \r\n                handleDelete={deletePost} \r\n                message={\"Are you sure you want to delete this post? This action is permanent and cannot be undone.\"}\r\n                id={postId} />\r\n        </Container>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { instance } from \"../services\";\r\nimport { getDateAgo } from \"../util\";\r\nimport { AiFillHeart } from \"react-icons/ai\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Like({ like, unlike }) {\r\n    return (\r\n        <div className=\"thread-wrapper\">\r\n            <p><b>{like.threadAuthor}</b></p>\r\n            <Link to={`/thread/${like.threadId}`}>\r\n                <h6>{like.threadSubject}</h6>\r\n            </Link>\r\n            <p className=\"text-muted\">\r\n                <IconContext.Provider value={{ className: 'heart-icon-liked' }}>\r\n                    <AiFillHeart onClick={() => unlike(like.threadId)} />\r\n                </IconContext.Provider> Liked {getDateAgo(like.createdAt)} ago\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function LikedList({ user }) {\r\n\r\n    const [likes, setLikes] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const source = axios.CancelToken.source();\r\n        const cancelToken = source.token;\r\n        instance.get(`/users/${user.username}/liked`, {\r\n            cancelToken\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setLikes(res.data);\r\n            })\r\n            .catch((err) => {\r\n                if (axios.isCancel(err)) {\r\n                    console.log('Request cancelled ' + err.message);\r\n                    return;\r\n                }\r\n                console.log(err);\r\n                setError(err);\r\n            });\r\n        \r\n        return (() => {\r\n            source.cancel('personally cancelled');\r\n        });\r\n    }, [user.username]);\r\n\r\n    function unlike(threadId) {\r\n        instance.delete(`/users/${user.username}/liked/${threadId}`)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setLikes([...likes.filter(el => el.threadId !== threadId)]);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setError(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {likes.map((currentLike) => (\r\n                <Like like={currentLike} unlike={unlike} key={currentLike.id} />\r\n            ))}\r\n        </div>\r\n    );\r\n}","import { Route, Redirect } from \"react-router\";\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute ({ children, user, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                user.token ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            } />\n    )\n};\n\nexport default PrivateRoute;","import { instance } from \"../services\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Tag({ tag, index }) {\r\n    return (\r\n        <Link to={`/search?tagged=${tag.id}`}>\r\n            <p><b>#{index + 1}</b> {tag.id}</p>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default function TopTagsList() {\r\n    \r\n    const [tags, setTags] = useState([]);\r\n\r\n    useEffect(() => {\r\n        instance.get('/tags/top')\r\n            .then((res) => {\r\n                console.log(res);\r\n                setTags(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"round-box\">\r\n            <div className=\"tags-box\">\r\n                <h6>Top Tags</h6>\r\n                {tags.map((currentTag, index) => (\r\n                    <Tag tag={currentTag} index={index} key={currentTag.id} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import UserThreadList from \"./UserThreadList\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from 'react-bootstrap/Container';\nimport Row from \"react-bootstrap/Row\";\nimport SideBar from \"./SideBar\";\nimport ThreadList from \"./ThreadList\";\nimport { useHistory, Route, Switch, useRouteMatch } from \"react-router\";\nimport UserPostList from \"./UserPostList\";\nimport LikedList from \"./LikedList\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport TopTagsList from \"./TopTagsList\";\n\nexport default function Dashboard({user}) {\n  let { path } = useRouteMatch();\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push('/create');\n  }\n\n  return (\n    <Container fluid className=\"homepage\">\n      <Row className=\"justify-content-center\">\n        <Col lg={{ order: 12 }}>\n          <div className=\"right-button\">\n            <Button onClick={() => handleClick()}>Create new thread</Button>\n          </div>\n        </Col>\n        <Col>\n          <SideBar user={user} />\n        </Col>\n        <Col xl={8}>\n          <Switch>\n            <Route exact path={path}>\n              <ThreadList user={user} />\n            </Route>\n            <PrivateRoute user={user} path={`${path}/threads`}>\n              <UserThreadList user={user} />\n            </PrivateRoute>\n            <PrivateRoute user={user} path={`${path}/posts`}>\n              <UserPostList user={user} />\n            </PrivateRoute>\n            <PrivateRoute user={user} path={`${path}/liked`}>\n              <LikedList user={user} />\n            </PrivateRoute>\n          </Switch>\n        </Col>\n      </Row>\n    </Container>\n  );\n}","import React from 'react';\r\n\r\nexport default function Preferences() {\r\n  return (\r\n    <h2>Preferences</h2>\r\n  );\r\n}","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Login.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useEffect } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { instance } from '../services';\r\nimport CustomAlertDismissable from './CustomAlert';\r\n\r\nasync function loginUser(credentials) {\r\n\r\n    return instance.post('/auth/login', {\r\n        username: credentials.username,\r\n        password: credentials.password\r\n    }).then((res) => {\r\n        //console.log(res.data);\r\n        return res.data;\r\n    }).catch((error) => {\r\n        //console.log(error.response);\r\n        if (error.response.status === 500) {\r\n            throw new Error('Server error');\r\n        } else {\r\n            throw new Error('Username/password is invalid');\r\n        } \r\n    });\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [validated, setValidated] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showErrorAlert, setShowErrorAlert] = useState(false);\r\n\r\n    const handleSubmit = async e => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const token = await loginUser({\r\n                username,\r\n                password\r\n            });\r\n            setToken(token);\r\n        } catch (e) {\r\n            setError(e.message);\r\n            setShowErrorAlert(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // clean up function\r\n        return () => {\r\n            setValidated(false);\r\n        };\r\n    }, []); // empty dependency array means I want to run an effect and clean it up once\r\n            // ..(on mount and unmount)\r\n            // ..https://reactjs.org/docs/hooks-reference.html#useeffect\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col lg={4}>\r\n                    <div className=\"round-box\">\r\n                        <CustomAlertDismissable \r\n                            show={showErrorAlert} \r\n                            variant={\"danger\"} \r\n                            message={error}\r\n                            setShow={setShowErrorAlert}\r\n                            heading={\"Error\"} />\r\n                        <h1>Log In</h1>\r\n                        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicUsername\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter username\"\r\n                                    onChange={e => setUserName(e.target.value)} />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please enter a username.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={e => setPassword(e.target.value)} />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please enter a password.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" block>Submit</Button>\r\n                            <Form.Text id=\"loginHelpInline\" muted>\r\n                                Don't have an account? <a href=\"/signup\">Sign up here.</a>\r\n                            </Form.Text>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}","import ThreadList from \"./ThreadList\";\r\nimport TopTagsList from \"./TopTagsList\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nexport default function Home({ user }) {\r\n\r\n    return (\r\n        <Container fluid className=\"homepage\">\r\n            <Row>\r\n                <Col xl={9}>\r\n                    <ThreadList user={user} />\r\n                </Col>\r\n                <Col xl={3} className=\"d-none d-md-block\">\r\n                    <Container fluid className=\"right-button\">\r\n                        <TopTagsList />\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n    );\r\n};","import { Route, Redirect } from \"react-router\";\n\nconst PublicRoute = ({ children, restricted, user, ...rest }) => {\n\n    return (\n        // restricted = false => public route\n        // restricted = true => restricted route\n        <Route {...rest} render={({ location}) => (\n            user.token && restricted ?\n                (<Redirect to={{\n                pathname: \"/dashboard\",\n                state: { from: location }\n            }} />)\n            : (children)\n        )} />\n    );\n};\n\nexport default PublicRoute;","import axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useReducer, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Login.css';\r\nimport { instance } from '../services';\r\nimport CustomAlertDismissable from './CustomAlert';\r\n\r\nconst formReducer = (state, event) => {\r\n    if (event.reset) {\r\n        return {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        [event.name]: event.value\r\n    };\r\n}\r\n\r\nexport default function SignUp() {\r\n    const [formData, setFormData] = useReducer(formReducer, {});\r\n    const history = useHistory();\r\n    const [validated, setValidated] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    const handleSubmit = event => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n\r\n        event.preventDefault();\r\n\r\n        const newUser = {\r\n            username: formData.username,\r\n            password: formData.password\r\n        };\r\n\r\n        instance.post(\"http://localhost:8080/api/v1/auth/signup\", newUser)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                history.push(\"/login\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                setError(error.response.data);\r\n                setShowAlert(true);\r\n                setFormData({reset: true});\r\n            });\r\n    }\r\n\r\n    const handleChange = event => {\r\n        setFormData({\r\n            name: event.target.name,\r\n            value: event.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col lg={5}>\r\n                    <CustomAlertDismissable \r\n                        show={showAlert} \r\n                        setShow={setShowAlert} \r\n                        variant={\"danger\"}\r\n                        heading={\"Error\"}\r\n                        message={error} />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col lg={4}>\r\n                    \r\n                    <div className=\"round-box\">\r\n                        <h1>Sign Up</h1>\r\n                        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicUsername\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    onChange={handleChange}\r\n                                    value={formData.username || ''} />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Username cannot be blank.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    onChange={handleChange}\r\n                                    value={formData.password || ''} />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Password cannot be blank.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <div className=\"pb-3\">\r\n                                <Button variant=\"primary\" type=\"submit\" block>Submit</Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nexport default function CreatePostModal({ show, handleClose, setContent, handleSubmit }) {\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create post</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl \r\n                            as=\"textarea\" \r\n                            aria-label=\"textarea\" placeholder=\"Share your thoughts here...\"\r\n                            onChange={e => setContent(e.target.value)} />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSubmit}>\r\n                        Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CreatePostModal from \"./CreatePost\";\r\nimport { BsPencil, BsX } from \"react-icons/bs\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport EditPostModal from \"./EditModal\";\r\nimport { instance } from \"../services\";\r\nimport DeleteModal from \"./DeleteModal\";\r\nimport { AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\r\nimport { getDateAgo } from \"../util\";\r\nimport CustomAlertDismissable from \"./CustomAlert\";\r\n\r\nfunction Post({ user, post, displayEditModal, displayDeleteModal }) {\r\n    return (\r\n        <div className=\"post-wrapper\">\r\n\r\n            <b>{post.author}</b>\r\n            <p>{post.content}</p>\r\n\r\n            <small className=\"text-muted\">{getDateAgo(post.createdAt)} ago</small>\r\n\r\n            <span>\r\n                <small className=\"text-muted\">{post.updatedAt ? ' Edited ' + post.updatedAt : '' }</small>\r\n            </span>\r\n            \r\n            {user.username === post.author ?\r\n            <span>\r\n                <span className=\"edit-span\" onClick={() => displayEditModal(post.id, post.content)}>\r\n                    <small> Edit </small>\r\n                </span>\r\n                <span className=\"delete-span\" onClick={() => displayDeleteModal(post.id)}>\r\n                    <small>Delete</small>\r\n                </span>\r\n            </span> : null}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Tag({ tag, findByTag }) {\r\n    return (\r\n        <li className=\"tag\" onClick={() => findByTag(tag)}>\r\n            <span className=\"tag-title\">{tag}</span>\r\n        </li>\r\n    );  \r\n}\r\n\r\nexport default function Thread({ user }) {\r\n    const [thread, setThread] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showCreateModal, setShowCreateModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [content, setContent] = useState(null);\r\n    const [postId, setPostId] = useState(null);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [showError, setShowError] = useState(false);\r\n\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        instance.get(`/threads/${ id }`)\r\n            .then((response) => {\r\n                setThread(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n        if (user.token) {\r\n            instance.get(`/users/${user.username}/threads/${id}/likes`)\r\n                .then(res => {\r\n                    if (res.status === 404) {\r\n                        setIsLiked(false);\r\n                    } else {\r\n                        setIsLiked(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n        \r\n        instance.get(`/threads/${id}/posts`)\r\n            .then(res => {\r\n                setPosts(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, [id, user.username, user.token]);\r\n\r\n    if (!thread) {\r\n        return (\r\n            null\r\n        );\r\n    }\r\n\r\n    const displayEditModal = (id, content) => {\r\n        setPostId(id);\r\n        setContent(content);\r\n        setShowEditModal(true);\r\n    }\r\n\r\n    const displayCreateModal = () => {\r\n        if (user.token) {\r\n            setShowCreateModal(true);\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const displayDeleteModal = (id) => {\r\n        setPostId(id);\r\n        setShowDeleteModal(true);\r\n    }\r\n\r\n    const hideEditModal = () => {\r\n        setShowEditModal(false);\r\n    }\r\n\r\n    const hideCreateModal = () => {\r\n        setShowCreateModal(false);\r\n    }\r\n\r\n    const hideDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    function editPost(id) {   \r\n        const editedPost = {\r\n            content: content\r\n        };\r\n\r\n        instance.put(`/users/${user.username}/posts/${id}`, editedPost)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setPosts(posts.map(post => {\r\n                    if (post.id === id) {\r\n                        return {...post, content: content, updatedAt: 'just now'};\r\n                    } else {\r\n                        return post;\r\n                    }\r\n                }));\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                setError(error.response.data);\r\n                setShowError(true);\r\n            })\r\n\r\n        setShowEditModal(false);\r\n    }\r\n\r\n    function createPost() {\r\n        const newPost = {\r\n            content: content,\r\n            threadId: id\r\n        };\r\n        \r\n        instance.post(`/users/${user.username}/posts`, newPost)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setPosts([...posts, response.data]);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                setError(error.response.data);\r\n                setShowError(true);\r\n            })\r\n\r\n        setShowCreateModal(false);\r\n    }\r\n\r\n    function deletePost(id) {\r\n        instance.delete(`/users/${user.username}/posts/${id}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setPosts([...posts.filter(el => el.id !== id)]);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setError(err.response.data);\r\n                setShowError(true);\r\n            })\r\n\r\n        setShowDeleteModal(false);\r\n    }\r\n\r\n    function toggleLike(isLiked) {\r\n        if (!user.token) {\r\n            history.push(\"/login\");\r\n        } else if (isLiked) {\r\n            instance.delete(`/users/${user.username}/liked/${id}`)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    setIsLiked(false);\r\n                    setThread({\r\n                        ...thread,\r\n                        likes: thread.likes - 1\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            instance.post(`/users/${user.username}/liked/${id}`)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    setIsLiked(true);\r\n                    setThread({\r\n                        ...thread,\r\n                        likes: thread.likes + 1\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }\r\n\r\n    function findByTag(tag) {\r\n        history.push(`/search?tagged=${tag}`);\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <div className=\"thread-wrapper\">\r\n                <p><b>{thread.author}</b></p>\r\n                <h3 className=\"mb-3\">{thread.subject}</h3>\r\n                <p>{thread.content}</p>\r\n                <p className=\"text-muted\">\r\n                    <IconContext.Provider value={{ className: isLiked ? 'heart-icon-liked' : 'heart-icon' }}>\r\n                        <AiFillHeart onClick={() => toggleLike(isLiked)} />\r\n                    </IconContext.Provider> {thread.likes} likes &bull; { }\r\n                    {getDateAgo(thread.createdAt)} ago\r\n                </p>\r\n                <ul id=\"tags\">\r\n                    {!thread.tags ? null : thread.tags.map((tag, index) => (\r\n                        <Tag tag={tag} findByTag={findByTag} key={index} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"thread-bar\">\r\n                <Button variant=\"primary\" onClick={() => displayCreateModal()}>Reply</Button>\r\n            </div>\r\n            <CustomAlertDismissable \r\n                show={showError}\r\n                setShow={setShowError}\r\n                variant={\"danger\"}\r\n                heading={\"Error\"}\r\n                message={error} />\r\n            <div className=\"thread-wrapper\">\r\n                {posts.length === 0 ? <p>No posts yet...</p> :\r\n                posts.map((currentPost) => (\r\n                <Post \r\n                    post={currentPost} \r\n                    displayEditModal={displayEditModal}\r\n                    displayDeleteModal={displayDeleteModal} \r\n                    user={user} \r\n                    key={currentPost.id} />\r\n            ))}\r\n            </div>\r\n            <EditPostModal\r\n                show={showEditModal}\r\n                handleClose={hideEditModal}\r\n                setContent={setContent}\r\n                handleEdit={editPost}\r\n                id={postId}\r\n                content={content} />\r\n            <DeleteModal\r\n                show={showDeleteModal}\r\n                handleClose={hideDeleteModal}\r\n                handleDelete={deletePost}\r\n                message={\"Are you sure you want to delete this post? This action is permanent and cannot be undone.\"}\r\n                id={postId} />\r\n            <CreatePostModal \r\n                show={showCreateModal}\r\n                handleClose={hideCreateModal}\r\n                setContent={setContent}\r\n                handleSubmit={createPost} />\r\n        </Container>\r\n    );\r\n}","import { FormControl } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Search() {\r\n    const history = useHistory();\r\n    const [searchField, setSearchField] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        setSearchField(e.target.value);\r\n    }\r\n\r\n    const doSearch = (e) => {\r\n        history.push(`/search?tagged=${e.target.value}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-bar\">\r\n            <FormControl \r\n                type=\"text\" \r\n                placeholder=\"Search tag...\" \r\n                className=\"mr-sm-2\"\r\n                value={searchField}\r\n                onChange={(e) => onChange(e)}\r\n                onKeyUp={e => e.key === \"Enter\" ? doSearch(e) : null} />\r\n        </div>\r\n    );\r\n}","import Button from \"react-bootstrap/Button\"\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport Search from \"./Search\";\n\nexport default function NavBar({ user }){\n    const history = useHistory();\n\n    const handleClick = () => {\n        history.push(\"/login\");\n    }\n\n    const logout = () => {\n        sessionStorage.clear();\n        window.location.href = '/';\n    }\n\n    if (user.token) {\n        return (\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className=\"navbar-wrapper\">\n                <Navbar.Brand href=\"/\">Forum</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n                        <Nav.Link href=\"/create\">Create a new thread</Nav.Link>\n                    </Nav>\n                    <Search />\n                    <Nav className=\"pr-2\">\n                        <Navbar.Text>\n                            Signed in as: <a href=\"/dashboard\">{user.username}</a>\n                        </Navbar.Text>\n                    </Nav>\n                    <Button variant=\"danger\" onClick={logout}>Log Out</Button>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n\n    return (\n        <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className=\"navbar-wrapper\">\n            <Navbar.Brand href=\"/\">Forum</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                </Nav>\n                <Search />\n                <Button variant=\"success\" onClick={handleClick}>Login</Button>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}","import { useReducer } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport './Login.css';\r\nimport Tags from \"./Tags\";\r\nimport { useState } from \"react\";\r\nimport { instance } from \"../services\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport CustomAlertDismissable from \"./CustomAlert\";\r\n\r\nconst formReducer = (state, event) => {\r\n\r\n    return {\r\n        ...state,\r\n        [event.name]: event.value\r\n    };\r\n}\r\n\r\nexport default function CreateThread({ user }) {\r\n    const [formData, setFormData] = useReducer(formReducer, {});\r\n    const [tags, setTags] = useState([]);\r\n    const history = useHistory();\r\n    const [validated, setValidated] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [showError, setShowError] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        setValidated(true);\r\n        event.preventDefault();\r\n\r\n        const newThread = {\r\n            subject: formData.subject,\r\n            content: formData.content,\r\n            tags: tags\r\n        };\r\n\r\n        instance.post(`/users/${user.username}/threads`, newThread)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                history.push(`/thread/${response.data.id}`);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setError(error.response.data);\r\n                setShowError(true);\r\n            });\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        setFormData({\r\n            name: e.target.name,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col lg={6}>\r\n                    <CustomAlertDismissable\r\n                        show={showError}\r\n                        setShow={setShowError}\r\n                        variant={\"danger\"}\r\n                        heading={\"Error creating thread\"}\r\n                        message={error} />\r\n                    <div className=\"round-box\">\r\n                        <h3>Create New Thread</h3>\r\n                        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    required\r\n                                    name=\"subject\"\r\n                                    placeholder=\"Subject\"\r\n                                    aria-label=\"Subject\"\r\n                                    aria-describedby=\"basic-addon1\"\r\n                                    onChange={handleChange}\r\n                                    value={formData.subject || ''}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Subject cannot be blank.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows=\"4\"\r\n                                    name=\"content\"\r\n                                    placeholder=\"Content\"\r\n                                    aria-label=\"Content\"\r\n                                    aria-describedby=\"basic-addon1\"\r\n                                    onChange={handleChange}\r\n                                    value={formData.content || ''}\r\n                                />\r\n                            </Form.Group>\r\n                            <Tags tags={tags} setTags={setTags} />\r\n                            <Button variant=\"primary\" type=\"button\" onClick={handleSubmit}>Submit</Button>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import { useEffect, useState } from \"react\";\r\nimport { instance } from \"../services\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction Thread({ thread }) {\r\n    return (\r\n        <div className=\"thread-wrapper\">\r\n            <Link to={\"/thread/\" + thread.id}>\r\n                {thread.subject}\r\n            </Link>\r\n            <p>by {thread.author} at {thread.createdAt}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function SearchList() {\r\n    let query = useQuery();\r\n    const [parameters, setParameters] = useState(query.get(\"tagged\"));\r\n    const [threads, setThreads] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setParameters(query.get(\"tagged\"));\r\n        console.log(parameters);\r\n    }, [query, parameters]);\r\n\r\n    useEffect(() => {\r\n        instance.get(`/threads?tagged=${parameters}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setThreads(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, [parameters]);\r\n\r\n    return (\r\n        <Container fluid className=\"thread-container\">\r\n            {threads.length > 0 ? threads.map(currentThread => (\r\n                <Thread thread={currentThread} key={currentThread.id} />\r\n            )) : <p>No threads found!</p>}\r\n        </Container>\r\n    );\r\n}","\r\nexport default function NotFound() {\r\n\r\n    return (\r\n        <h1>Not Found</h1>\r\n    );\r\n}","import { AiFillGithub } from \"react-icons/ai\";\r\n\r\nexport default function Footer() {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <span className=\"text-muted\">&copy; 2021</span>\r\n                <AiFillGithub className=\"github-icon\" onClick={() => window.open('https://github.com/mistyau', '_blank').focus()} />\r\n            </div>\r\n        </footer>\r\n    );\r\n}","import './App.scss';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Preferences from './components/Preferences';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport useToken from './components/userToken';\nimport PublicRoute from './PublicRoute';\nimport PrivateRoute from './PrivateRoute';\nimport SignUp from './components/Signup';\nimport Thread from './components/Thread';\nimport NavBar from './components/NavBar';\nimport CreateThread from './components/CreateThreadForm';\nimport SearchList from './components/SearchList';\nimport NotFound from './components/NotFound';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const { token, setToken } = useToken();\n\n  return (\n    <div className=\"wrapper\">\n      <BrowserRouter basename=\"forum-react-app\">\n        <NavBar user={token} />\n        <Switch>\n          <PublicRoute restricted={false} user={token} path=\"/\" exact>\n            <Home user={token} />\n          </PublicRoute>\n          <PublicRoute restricted={false} user={token} path=\"/thread/:id\"> \n            <Thread user={token} />\n          </PublicRoute>\n          <PublicRoute restricted={false} user={token} path=\"/search\">\n            <SearchList />\n          </PublicRoute>\n          <PublicRoute restricted={true} user={token} path=\"/signup\">\n            <SignUp/>\n          </PublicRoute>\n          <PublicRoute restricted={true} user={token} path=\"/login\">\n            <Login setToken={setToken} />\n          </PublicRoute>\n          <PrivateRoute user={token} path=\"/dashboard\">\n            <Dashboard user={token}/>\n          </PrivateRoute>\n          <PrivateRoute user={token} path=\"/create\">\n            <CreateThread user={token} />\n          </PrivateRoute>\n          <PrivateRoute user={token} path=\"/preferences\">\n            <Preferences />\n          </PrivateRoute>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// Custom React hook\r\n\r\nimport { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n\r\n    const getToken = () => {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const usernameString = sessionStorage.getItem('username');\r\n        const refreshString = sessionStorage.getItem('refresh_token');\r\n\r\n        const user = { token:           JSON.parse(tokenString),\r\n                       username:        JSON.parse(usernameString),\r\n                       refresh_token:   JSON.parse(refreshString)};\r\n        return user;\r\n    };\r\n\r\n    const [token, setToken] = useState(getToken());\r\n\r\n    const saveToken = userToken => {\r\n        sessionStorage.setItem('token', JSON.stringify(userToken.access_token));\r\n        sessionStorage.setItem('username', JSON.stringify(userToken.username));\r\n        sessionStorage.setItem('refresh_token', JSON.stringify(userToken.refresh_token));\r\n        setToken({ token: userToken.access_token, username: userToken.username, refresh_token: userToken.refresh_token }); // should only set state once\r\n    };\r\n\r\n    return {\r\n        setToken: saveToken,\r\n        token\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Single Page Apps for GitHub Pages\n// MIT License\n// https://github.com/rafgraph/spa-github-pages\n// This script checks to see if a redirect is present in the query string,\n// converts it back into the correct url and adds it to the\n// browser's history using window.history.replaceState(...),\n// which won't cause the browser to attempt to load the new url.\n// When the single page app is loaded further down in this file,\n// the correct url will be waiting in the browser's history for\n// the single page app to route accordingly.\n(function(l) {\n  if (l.search[1] === '/' ) {\n    var decoded = l.search.slice(1).split('&').map(function(s) { \n      return s.replace(/~and~/g, '&')\n    }).join('?');\n    window.history.replaceState(null, null,\n        l.pathname.slice(0, -1) + decoded + l.hash\n    );\n  }\n}(window.location))\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}